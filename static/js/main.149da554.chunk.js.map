{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","length","slice","calculateWinner","setState","concat","status","current","winner","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"sLAIA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMG,O,IAKLC,E,qLACSC,GAAI,IAAD,OACd,OACE,kBAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAMtC,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GA1BTC,IAAMC,WAgCpBC,E,YACJ,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KACDY,MAAQ,CACXC,QAAS,CAAC,CACRN,QAASO,MAAM,GAAGC,KAAK,QAEzBC,SAAS,GANM,E,yEAUPX,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAErBN,EADUM,EAAQA,EAAQI,OAAS,GACjBV,QAAQW,QAC5BC,EAAgBZ,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAU,IAAM,IACxCV,KAAKc,SAAS,CACZP,QAASA,EAAQQ,OAAO,CAAC,CACvBd,QAASA,KAEXS,SAAUV,KAAKM,MAAMI,a,+BAGf,IAKJM,EALG,OACDT,EAAUP,KAAKM,MAAMC,QACrBU,EAAUV,EAAQA,EAAQI,OAAS,GACnCO,EAASL,EAAgBI,EAAQhB,SASvC,OALEe,EADEE,EACO,WAAaA,EAEb,iBAAmBlB,KAAKM,MAAMI,QAAU,IAAM,KAIvD,yBAAKf,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACEG,QAASgB,EAAQhB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAKoB,YAAYpB,OAGrC,yBAAKJ,UAAU,aACb,6BAAMqB,GACN,mC,GAhDSb,IAAMC,WA+DzB,SAASS,EAAgBZ,GAWvB,IAVA,IAAMmB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEArB,EAAI,EAAGA,EAAIqB,EAAMT,OAAQZ,IAAK,CAAC,IAAD,cACnBqB,EAAMrB,GADa,GAC9BsB,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAItB,EAAQoB,IAAMpB,EAAQoB,KAAOpB,EAAQqB,IAAMrB,EAAQoB,KAAOpB,EAAQsB,GACpE,OAAOtB,EAAQoB,GAGnB,OAAO,KAtBTG,IAASC,OACP,kBAACpB,EAAD,MACAqB,SAASC,eAAe,U","file":"static/js/main.149da554.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n  \r\n  class Board extends React.Component {\r\n    renderSquare(i) {\r\n      return (\r\n        <Square \r\n          value={this.props.squares[i]} \r\n          onClick={() => this.props.onClick(i)}\r\n        />\r\n      );\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  class Game extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        history: [{\r\n          squares: Array(9).fill(null),\r\n        }],\r\n        xIsNext: true,\r\n      };\r\n    }\r\n  \r\n    handleClick(i) {\r\n      const history = this.state.history;\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n      if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n      this.setState({\r\n        history: history.concat([{\r\n          squares: squares\r\n        }]),\r\n        xIsNext: !this.state.xIsNext,\r\n      });\r\n    }\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[history.length - 1];\r\n      const winner = calculateWinner(current.squares);\r\n\r\n      let status;\r\n      if (winner) {\r\n        status = 'Winner: ' + winner;\r\n      } else {\r\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n      }\r\n  \r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board\r\n              squares={current.squares}\r\n              onClick={(i) => this.handleClick(i)}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{/* TODO */}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  "],"sourceRoot":""}