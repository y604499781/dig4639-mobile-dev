{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","squares","this","state","slice","xIsNext","setState","status","renderSquare","React","Component","Game","history","Array","fill","ReactDOM","render","document","getElementById"],"mappings":"oLAIA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMG,O,IAKLC,E,oLACQC,GACV,IAAMC,EAAUC,KAAKC,MAAMF,QAAQG,QACnCH,EAAQD,GAAKE,KAAKC,MAAME,QAAU,IAAM,IACxCH,KAAKI,SAAS,CACZL,QAASA,EACTI,SAAUH,KAAKC,MAAME,Y,mCAGZL,GAAI,IAAD,OACd,OACE,kBAACN,EAAD,CACEI,MAAOI,KAAKP,MAAMM,QAAQD,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAMtC,IAAMO,EAAS,iBAAmBL,KAAKC,MAAME,QAAU,IAAM,KAE7D,OACE,6BACE,yBAAKT,UAAU,UAAUW,GACzB,yBAAKX,UAAU,aACZM,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,IAErB,yBAAKZ,UAAU,aACZM,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,IAErB,yBAAKZ,UAAU,aACZM,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,S,GArCTC,IAAMC,WA4CpBC,E,YACJ,WAAYhB,GAAQ,IAAD,8BACjB,4CAAMA,KACDQ,MAAQ,CACXS,QAAS,CAAC,CACRX,QAASY,MAAM,GAAGC,KAAK,QAEzBT,SAAS,GANM,E,sEAWjB,OACE,yBAAKT,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,OAEF,yBAAKH,UAAU,aACb,8BACA,mC,GAnBSa,IAAMC,WA4BzBK,IAASC,OACP,kBAACL,EAAD,MACAM,SAASC,eAAe,U","file":"static/js/main.06e65230.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n  \r\n  class Board extends React.Component {\r\n    handleClick(i) {\r\n      const squares = this.state.squares.slice();\r\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n      this.setState({\r\n        squares: squares,\r\n        xIsNext: !this.state.xIsNext,\r\n      });\r\n    }\r\n    renderSquare(i) {\r\n      return (\r\n        <Square \r\n          value={this.props.squares[i]} \r\n          onClick={() => this.props.onClick(i)}\r\n        />\r\n      );\r\n    }\r\n  \r\n    render() {\r\n      const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n  \r\n      return (\r\n        <div>\r\n          <div className=\"status\">{status}</div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        history: [{\r\n          squares: Array(9).fill(null),\r\n        }],\r\n        xIsNext: true,\r\n      };\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{/* status */}</div>\r\n            <ol>{/* TODO */}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  "],"sourceRoot":""}